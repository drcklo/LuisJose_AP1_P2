@page "/C_Entradas"
@inject HttpClient httpClient
@inject NotificationService notificationService

<div class="card">
    <div class="card-header">
        <h3>Consulta de Entradas</h3>
    </div>

    <div class="card-body">
        <div class="row">
            <button type="button" @onclick="Buscar" class="btn btn-primary input-group-text">
                <i class="oi oi-magnifying-glass " />
            </button>
        </div>
        @if (ListaEntradas is not null)
        {
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th>Entrada ID</th>
                        <th>Fecha</th>
                        <th>Concepto</th>
                        <th>Cantidad Producida</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var entrada in ListaEntradas)
                    {
                        <tr>
                            <th>@entrada.EntradaID</th>
                            <th>@entrada.Fecha</th>
                            <th>@entrada.Concepto</th>
                            <th>@entrada.CantidadProducida</th>
                            <th><a href="RegistroProductos/@entrada.EntradaID"><span class="oi oi-eye"></span></a></th>
                        </tr>
                    }

                </tbody>

            </table>
        }
    </div>
    <div class="card-footer">
        <div class="form-row justify-content-sm-between" aria-orientation="vertical">
            <div class="col-3">
                <label for="CantidaRegistro" class="col-form-label"><strong>Filas</strong>&nbsp;</label>
                <input id="CantidaRegistro" @bind-value="@Cuenta" disabled class="form-control" />
            </div>
        </div>
    </div>
</div>

@code
{
    public Entradas entradas { get; set; } = new Entradas();
    public List<Entradas> ListaEntradas { get; set; } = new List<Entradas>();
    public int Cuenta { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var entrada = await httpClient.GetFromJsonAsync<List<Entradas>>($"api/Entradas");

        if (entrada is null)
        {
            var mensaje = new NotificationMessage
                {
                    Severity = NotificationSeverity.Error,
                    Summary = "No se encuentran entradas",
                    Detail = "Ingrese entradas nuevas antes de buscar",
                    Duration = 4_000
                };
            notificationService.Notify(mensaje);
        }
        if (entrada is not null)
        {
            ListaEntradas = entrada;
        }
    }

    public async Task Buscar()
    {
        ListaEntradas = await httpClient.GetFromJsonAsync<List<Entradas>>($"api/Entradas");

        Cuenta = ListaEntradas != null ? ListaEntradas!.Count() : 0;
        StateHasChanged();
    }

    public void Limpiar()
    {
        entradas = new Entradas();
        ListaEntradas.Clear();
    }
}